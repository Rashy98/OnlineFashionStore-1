let userRoutes,sessionRouter,PORT,NODE_ENV,MONGO_URI,SESS_NAME,SESS_SECRET,SESS_LIFETIME,session,connectStore;_678‍.w("../Backend/UserBackend/src/routes/index",[["userRoutes",["userRoutes"],function(v){userRoutes=v}],["sessionRouter",["sessionRouter"],function(v){sessionRouter=v}]]);_678‍.w("./config",[["PORT",["PORT"],function(v){PORT=v}],["NODE_ENV",["NODE_ENV"],function(v){NODE_ENV=v}],["MONGO_URI",["MONGO_URI"],function(v){MONGO_URI=v}],["SESS_NAME",["SESS_NAME"],function(v){SESS_NAME=v}],["SESS_SECRET",["SESS_SECRET"],function(v){SESS_SECRET=v}],["SESS_LIFETIME",["SESS_LIFETIME"],function(v){SESS_LIFETIME=v}]]);_678‍.w("express-session",[["default",["session"],function(v){session=v}]]);_678‍.w("connect-mongo",[["default",["connectStore"],function(v){connectStore=v}]]);




const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');

const path = require('path');

require('dotenv').config();
(async () => {

    const app = express();
    const port = process.env.PORT || 5000;


    app.use(cors());
    app.use(express.json());
    app.use(bodyParser.urlencoded({extended: true}))
    app.use(bodyParser.json());

    app.use(express.static(path.join(__dirname, '...', 'public')))

    const uri = process.env.ATLAS_URI;
    await mongoose.connect(uri, {useUnifiedTopology: true, useNewUrlParser: true, useCreateIndex: true});

    const connection = mongoose.connection;
    connection.once('open', () => {
        console.log("Mongo database Successfully connected");
    })

    const MongoStore = connectStore(session);

    app.disabled('x-powered-by');

    app.use(express.urlencoded({extended: true}));
    app.use(express.json());
    app.use(session({
        name: SESS_NAME,
        secret: SESS_SECRET,
        saveUninitialized: true,
        resave: false,
        store: new MongoStore({
            mongooseConnection: mongoose.connection,
            collection: 'session',
            ttl: parseInt(SESS_LIFETIME)
        }),
        cookie: {
            sameSite: true,
            secure: NODE_ENV === 'production',
            maxAge: parseInt(SESS_LIFETIME)
        }
    }));

    const corsOptions = {
        origin: 'http://localhost:3000',
        credentials: true,
        optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204
    };

    app.use(cors(corsOptions));


    const categoriesRouter = require('../Backend/AdminBackend/routes/categories.js');
    const managersRouter = require('../Backend/AdminBackend/routes/managers');
    const addItemRouter = require('../Backend/AdminBackend/routes/additem');

    app.use('/category', categoriesRouter);
    app.use('/managers', managersRouter);
    app.use('/additem', addItemRouter);

    const apiRouter = express.Router();
    app.use('/api', apiRouter);
    app.use('/api/products', require('../Backend/UserBackend/src/routes/products'));
    app.use('/api/cart', require('../Backend/UserBackend/src/routes/cart'));
    app.use('/api/WishList', require('../Backend/UserBackend/src/routes/wishlist'));
    apiRouter.use('/users', userRoutes);
    apiRouter.use('/session', sessionRouter);

    app.listen(port, () => {
        console.log(`Server is running on port:  ${port}`);
    })
})();
